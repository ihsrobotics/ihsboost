name: CMake

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  setup-status:
    runs-on: ubuntu-latest
    steps:
      - name: set-build-status
        uses: myrotvorets/set-commit-status-action@1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Commit status (one of "error", "failure", "pending", "success")
          status: pending
          # A short description of the status.
          description: awaiting building
          context: build-status
      - name: set-test-status
        uses: myrotvorets/set-commit-status-action@1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Commit status (one of "error", "failure", "pending", "success")
          status: pending
          # A short description of the status.
          description: awaiting testing
          context: test-status

  build-and-test:
    needs: setup-status # wait for pending status before starting
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # ========== Dependencies ==========
      - name: Install dependencies
        run: sudo apt-get install python3-dev libjsoncpp-dev libboost-python-dev libopencv-dev ninja-build -y

      - name: Install libwallaby
        run: git clone https://github.com/chrehall68/libwallaby.git &&
          cd ./libwallaby &&
          git checkout refactor &&
          mkdir build && cd build &&
          cmake .. -Dwith_tello=OFF -Dwith_graphics=OFF -Dwith_python_binding=OFF -Dwith_documentation=OFF -Dwith_tests=OFF -DDUMMY=ON -G "Ninja" &&
          cmake --build . --parallel &&
          sudo cmake --install . &&
          cd ../..

      # ========== Build ==========
      - name: Configure CMake
        # Configure ihsboost CMake in 'build' subdirectory.
        run:
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -Dwith_documentation=OFF -Dpython_version=3.10 -Dbuild_tests=ON \
          -G "Ninja"

      - name: Build
        # Build your program with the given configuration
        id: build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: install
        run: sudo cmake --install ${{github.workspace}}/build && sudo ldconfig

      - name: update-build-status
        uses: myrotvorets/set-commit-status-action@1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Commit status (one of "error", "failure", "pending", "success")
          status: success
          # A short description of the status.
          description: build successful
          context: build-status

      # ========== Test ==========
      - name: test
        id: test
        run: ctest -j4 -C {{env.BUILD_TYPE}} -T test --output-on-failure --test-dir ${{github.workspace}}/build

      - name: update-test-status
        uses: myrotvorets/set-commit-status-action@1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Commit status (one of "error", "failure", "pending", "success")
          status: success
          # A short description of the status.
          description: all tests passed
          context: test-status

      # ========== Exit ==========
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: ${{github.workspace}}/build

      # ========== Failure Section ==========
      # if build fails, set it to failed
      - name: set-build-failure
        if: ${{ always() && (steps.build.outcome == 'failure' || steps.build.outcome == 'canceled') }}
        uses: myrotvorets/set-commit-status-action@1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Commit status (one of "error", "failure", "pending", "success")
          status: failure
          # A short description of the status.
          description: failed to build
          context: build-status
      # if testing failed, set that to failed
      - name: set-test-failure
        if: ${{ always() && (steps.test.outcome == 'failure' || steps.test.outcome == 'canceled') }}
        uses: myrotvorets/set-commit-status-action@1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Commit status (one of "error", "failure", "pending", "success")
          status: failure
          # A short description of the status.
          description: tests failed
          context: test-status
